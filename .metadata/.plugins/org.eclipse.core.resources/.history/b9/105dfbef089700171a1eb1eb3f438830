package com.sirius.employeews.db;

import java.sql.Connection;
import java.sql.SQLException;

import javax.naming.NamingException;

import com.sirius.employeews.beans.EmployeeBean;

public class EmployeeServiceDAO {
	
	public EmployeeBean getEmployeeByEmail(String email) {
		Connection conn = null;
		try {
			conn = DBConnection.getConnection();
		} catch (NamingException e) {
			e.printStackTrace();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		EmployeeServiceDAOImpl impl = new EmployeeServiceDAOImpl(conn);
		EmployeeBean emp = impl.getEmployeeByEmail(email);
		impl.closeConnection();
		return emp;
	}
	
	public void updateEmployee(boolean isValid) throws SQLException{
		Connection conn = null;
		try {
			conn = DBConnection.getConnection();
		} catch (NamingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		EmployeeServiceDAOImpl impl = new EmployeeServiceDAOImpl(conn);
		impl.updateEmployee(isValid);
		impl.closeConnection();
	}
	
	public boolean updateEmployee(int id, String firstname, String lastname,
			String role, int age, String email, String phone, byte[] photo, int mid) throws SQLException {
		
		try {
			conn = DBConnection.getConnection();
			if (id == 0) {
				return false;
			}
			String sqlQuery = "UPDATE Employee_tbl SET FirstName=(?), LastName=(?),"+
			" Role=(?), Age=(?), Phone=(?), Email=(?), Manager_ID=(?) WHERE ID=(?)";
			PreparedStatement statement = conn.prepareStatement(sqlQuery);
			statement.setString(1, firstname);
			statement.setString(2, lastname);
			statement.setString(3, role);
			statement.setInt(4, age);
			statement.setString(5, phone);
			statement.setString(6, email);
			statement.setInt(7, mid);
			statement.setInt(8, id);
			statement.executeUpdate();
			conn.commit();
			if(photo!=null){
				String sql = "UPDATE Employee_tbl SET Photo=(?) WHERE ID=(?)";
				PreparedStatement statement2 = conn.prepareStatement(sql);
				statement2.setBytes(1, photo);
				statement2.setInt(2, id);
				statement2.executeUpdate();
				conn.commit();
				DBConnection.closeStatement(statement2);
			}
			DBConnection.closeStatement(statement);
		} catch (NamingException e1) {
			logger.log(Level.FINE, "Error update() " +e1);
			e1.printStackTrace();
		} catch (SQLException e1) {
			logger.log(Level.FINE, "Error update() " +e1);
			e1.printStackTrace();
			return false;
		}
		return true;
	}
}
