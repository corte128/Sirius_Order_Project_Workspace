package com.sirius.service.superadmin;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

import com.sirius.back.beans.EmployeeBean;

/**
 * This interface defines the CRUD functionality for the user profiles
 * 
 * @author Scout Martinelli
 */
@WebService(name="Profile", targetNamespace = "http://services.back.sirius.com/profile/wsdl")
public interface Profile {
	// Create Methods------------------------------------------------------------------------------------------------
	/**
	 * Creates an employee in the employee table
	 * @param employee
	 * @return true if succesful, false if there was an issue
	 */
	@WebMethod(action = "CreateEmployee")
	@WebResult(name = "CreateEmployeeReturn", targetNamespace = "http://services.back.sirius.com/profile/wsdl")
	@RequestWrapper(localName = "CreateEmployee", targetNamespace = "http://services.back.sirius.com/profile/wsdl", className = "com.sirius.back.services.CreateEmployee")
	@ResponseWrapper(localName = "CreateEmployeeResponse", targetNamespace = "http://services.back.sirius.com/profile/wsdl", className = "com.sirius.back.services.CreateEmployeeResponse")
	public boolean CreateEmployee(
			@WebParam(name="employee", targetNamespace = "http://services.back.sirius.com/profile/wsdl")
			EmployeeBean employee
			);
	
	// Read Methods---------------------------------------------------------------------------------------------------
	/**
	 * gets the employee Id
	 * @param username
	 * @return id
	 */
	@WebMethod(action = "getEmployeeId")
	@WebResult(name = "getEmployeeIdReturn", targetNamespace = "http://services.back.sirius.com/profile/wsdl")
	@RequestWrapper(localName = "getEmployeeId", targetNamespace = "http://services.back.sirius.com/profile/wsdl", className = "com.sirius.back.services.getEmployeeId")
	@ResponseWrapper(localName = "getEmployeeIdResponse", targetNamespace = "http://services.back.sirius.com/profile/wsdl", className = "com.sirius.back.services.getEmployeeIdResponse")
	public int getEmployeeId(
			@WebParam(name="username", targetNamespace = "http://services.back.sirius.com/profile/wsdl")
			String username
			);
	
	/**
	 * Gets all of the Managers in the database
	 * @return managers
	 */
	@WebMethod(action = "getSpecificEmployees")
	@WebResult(name = "getSpecificEmployeesReturn", targetNamespace = "http://services.back.sirius.com/profile/wsdl")
	@RequestWrapper(localName = "getSpecificEmployees", targetNamespace = "http://services.back.sirius.com/profile/wsdl", className = "com.sirius.back.services.getSpecificEmployees")
	@ResponseWrapper(localName = "getSpecificEmployeesResponse", targetNamespace = "http://services.back.sirius.com/profile/wsdl", className = "com.sirius.back.services.getSpecificEmployeesResponse")
	public EmployeeBean[] getSpecificEmployees(
			@WebParam(name="role", targetNamespace = "http://services.back.sirius.com/profile/wsdl")
			String role
			);
	
	/**
	 * Returns the employees object through the web service. If you only want one employee
	 * just give an array of one element
	 * @param id[]
	 * @return employeeBean[]
	 */
	@WebMethod(action = "getAllEmployees")
	@WebResult(name = "getAllEmployeesReturn", targetNamespace = "http://services.back.sirius.com/profile/wsdl")
	@RequestWrapper(localName = "getAllEmployees", targetNamespace = "http://services.back.sirius.com/profile/wsdl", className = "com.sirius.back.services.GetAllEmployees")
	@ResponseWrapper(localName = "getAllEmployeesResponse", targetNamespace = "http://services.back.sirius.com/profile/wsdl", className = "com.sirius.back.services.GetAllEmployeesResponse")
	public EmployeeBean[] getAllEmployees();
	
	/**
	 * Gets the employee based on the given ID
	 * @param id
	 * @return employeeBean
	 */
	@WebMethod(action = "getEmployeeById")
	@WebResult(name = "getEmployeeByIdReturn", targetNamespace = "http://services.back.sirius.com/profile/wsdl")
	@RequestWrapper(localName = "getEmployeeById", targetNamespace = "http://services.back.sirius.com/profile/wsdl", className = "com.sirius.back.services.getEmployeeById")
	@ResponseWrapper(localName = "getEmployeeByIdResponse", targetNamespace = "http://services.back.sirius.com/profile/wsdl", className = "com.sirius.back.services.getEmployeeByIdResponse")
	public EmployeeBean getEmployeeById(
			@WebParam(name="id", targetNamespace = "http://services.back.sirius.com/profile/wsdl")
			int id
			);
	
	@WebMethod(action = "getEmployeeByProperties")
	@WebResult(name = "getEmployeeByPropertiesReturn", targetNamespace = "http://services.back.sirius.com/profile/wsdl")
	@RequestWrapper(localName = "getEmployeeByProperties", targetNamespace = "http://services.back.sirius.com/profile/wsdl", className = "com.sirius.back.services.getEmployeeByProperties")
	@ResponseWrapper(localName = "getEmployeeByPropertiesResponse", targetNamespace = "http://services.back.sirius.com/profile/wsdl", className = "com.sirius.back.services.getEmployeeByPropertiesResponse")
	public EmployeeBean[] getEmployeeByProperties(
			@WebParam(name="firstName", targetNamespace = "http://services.back.sirius.com/profile/wsdl")
			String firstName,
			@WebParam(name="lastName", targetNamespace = "http://services.back.sirius.com/profile/wsdl")
			String lastName,
			@WebParam(name="email", targetNamespace = "http://services.back.sirius.com/profile/wsdl")
			String email,
			@WebParam(name="role", targetNamespace = "http://services.back.sirius.com/profile/wsdl")
			String role
			);
	
	// Update Methods----------------------------------------------------------------------------------------------------
	/**
	 * Takes an employee object and based off of the id makes the changes necessary
	 * @param employee
	 * @return true if the operation was successful, and false if not
	 */
	@WebMethod(action = "updateEmployee")
	@WebResult(name = "updateEmployeeReturn", targetNamespace = "http://services.back.sirius.com/profile/wsdl")
	@RequestWrapper(localName = "updateEmployee", targetNamespace = "http://services.back.sirius.com/profile/wsdl", className = "com.sirius.back.services.updateEmployee")
	@ResponseWrapper(localName = "updateEmployeeResponse", targetNamespace = "http://services.back.sirius.com/profile/wsdl", className = "com.sirius.back.services.updateEmployeeResponse")
	public boolean updateEmployee(
			@WebParam(name="employee", targetNamespace = "http://services.back.sirius.com/profile/wsdl")
			EmployeeBean employee
			);
	
	/**
	 * Takes an employee object and based off of the id assigns the manager id
	 * @param id, managerId
	 * @return true if the operation was successful, and false if not
	 */
	@WebMethod(action = "updateEmployeeManager")
	@WebResult(name = "updateEmployeeManagerReturn", targetNamespace = "http://services.back.sirius.com/profile/wsdl")
	@RequestWrapper(localName = "updateEmployeeManager", targetNamespace = "http://services.back.sirius.com/profile/wsdl", className = "com.sirius.back.services.updateEmployeeManager")
	@ResponseWrapper(localName = "updateEmployeeManagerResponse", targetNamespace = "http://services.back.sirius.com/profile/wsdl", className = "com.sirius.back.services.updateEmployeeManagerResponse")
	public boolean updateEmployeeManager(
			@WebParam(name="id", targetNamespace = "http://services.back.sirius.com/profile/wsdl")
			int id,
			@WebParam(name="managerId", targetNamespace = "http://services.back.sirius.com/profile/wsdl")
			int managerId
			);
	
	// Delete Methods-----------------------------------------------------------------------------------------------------
	/**
	 * Deletes and employee based on the id given
	 * @param id
	 * @return true if the delete operation was successful, false if the delete operation was not
	 */
	@WebMethod(action = "deleteEmployeeById")
	@WebResult(name = "deleteEmployeeByIdReturn", targetNamespace = "http://services.back.sirius.com/profile/wsdl")
	@RequestWrapper(localName = "deleteEmployeeById", targetNamespace = "http://services.back.sirius.com/profile/wsdl", className = "com.sirius.back.services.deleteEmployeeById")
	@ResponseWrapper(localName = "deleteEmployeeByIdResponse", targetNamespace = "http://services.back.sirius.com/profile/wsdl", className = "com.sirius.back.services.deleteEmployeeByIdResponse")
	public boolean deleteEmployeeById(
			@WebParam(name="id", targetNamespace = "http://services.back.sirius.com/profile/wsdl")
			int id
			);
	
	
	
	
	
	
}